e: org.jetbrains.kotlin.util.KotlinFrontEndException: Front-end Internal error: Failed to analyze declaration HomesEntity
Cause: Unable to make field private static final jdk.internal.misc.Unsafe jdk.internal.misc.Unsafe.theUnsafe accessible: module java.base does not "opens jdk.internal.misc" to unnamed module @38900184
File being compiled and position: (11,1) in /mnt/batch/tasks/workitems/NONDEX_nondex_r131_1M31d16h48m2s/job-1/Task1409/wd/NonDex-plugin-test/github.com/m4kvn/spigot-home-legacy/src/main/kotlin/com/masahirosaito/spigot/homes/nms/HomesEntity.kt
PsiElement: data class HomesEntity(
        val offlinePlayer: OfflinePlayer,
        val location: Location,
        var homeName: String? = null,
        var isPrivate: Boolean = false
) {
    var entities: List<NMSEntityArmorStand> = emptyList()

    fun isOwner(offlinePlayer: OfflinePlayer): Boolean {
        return this.offlinePlayer.uniqueId == offlinePlayer.uniqueId
    }

    fun toHomeData(): HomeData {
        return HomeData(homeName, location.toData(), isPrivate)
    }

    fun despawnEntities() {
        entities.forEach { it.dead() }
    }

    fun reSpawnEntities() {
        despawnEntities()
        spawnEntities()
    }

    fun spawnEntities() {
        if (Configs.onHomeDisplay) {
            entities = NMSManager.spawn(this)
        }
    }

    fun inChunk(chunk: Chunk): Boolean {
        return chunk.x == location.chunk.x && chunk.z == location.chunk.z
    }
}
The root cause was thrown at: AccessibleObject.java:340
	at org.jetbrains.kotlin.resolve.ExceptionWrappingKtVisitorVoid.visitDeclaration(ExceptionWrappingKtVisitorVoid.kt:41)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitDeclaration(KtVisitorVoid.java:445)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitDeclaration(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtVisitor.visitNamedDeclaration(KtVisitor.java:390)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitNamedDeclaration(KtVisitorVoid.java:373)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitNamedDeclaration(KtVisitorVoid.java:951)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitNamedDeclaration(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtVisitor.visitClassOrObject(KtVisitor.java:41)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitClassOrObject(KtVisitorVoid.java:37)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitClassOrObject(KtVisitorVoid.java:457)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitClassOrObject(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtVisitor.visitClass(KtVisitor.java:33)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitClass(KtVisitorVoid.java:33)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitClass(KtVisitorVoid.java:451)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitClass(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtClass.accept(KtClass.kt:34)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer$analyzeDeclarations$1.registerDeclarations(LazyTopDownAnalyzer.kt:73)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer$analyzeDeclarations$1.visitKtFile(LazyTopDownAnalyzer.kt:91)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtFile(KtVisitorVoid.java:505)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtFile(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtFile.accept(KtFile.java:234)
	at org.jetbrains.kotlin.psi.KtFile.accept(KtFile.java:214)
	at org.jetbrains.kotlin.resolve.ExceptionWrappingKtVisitorVoid.visitElement(ExceptionWrappingKtVisitorVoid.kt:27)
	at org.jetbrains.kotlin.com.intellij.psi.PsiElementVisitor.visitFile(PsiElementVisitor.java:34)
	at org.jetbrains.kotlin.psi.KtVisitor.visitKtFile(KtVisitor.java:73)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtFile(KtVisitorVoid.java:69)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtFile(KtVisitorVoid.java:505)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitKtFile(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtFile.accept(KtFile.java:234)
	at org.jetbrains.kotlin.psi.KtFile.accept(KtFile.java:214)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.kt:187)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations$default(LazyTopDownAnalyzer.kt:56)
	at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.kt:107)
	at org.jetbrains.kotlin.resolve.jvm.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration$default(TopDownAnalyzerFacadeForJVM.kt:79)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$analyze$1.analyze(KotlinToJVMBytecodeCompiler.kt:347)
	at org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.kt:104)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinToJVMBytecodeCompiler.kt:336)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules(KotlinToJVMBytecodeCompiler.kt:131)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:170)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:55)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.java:191)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.compileChanged(IncrementalJvmCompilerRunner.kt:443)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.compileIncrementally(IncrementalJvmCompilerRunner.kt:304)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.compile(IncrementalJvmCompilerRunner.kt:128)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.execIncrementalCompiler(CompileServiceImpl.kt:454)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.access$execIncrementalCompiler(CompileServiceImpl.kt:95)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$compile$1$$special$$inlined$withIC$lambda$1.invoke(CompileServiceImpl.kt:381)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$compile$1$$special$$inlined$withIC$lambda$1.invoke(CompileServiceImpl.kt:95)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$2$$special$$inlined$withValidClientOrSessionProxy$lambda$1.invoke(CompileServiceImpl.kt:750)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$2$$special$$inlined$withValidClientOrSessionProxy$lambda$1.invoke(CompileServiceImpl.kt:95)
	at org.jetbrains.kotlin.daemon.common.DummyProfiler.withMeasure(PerfUtils.kt:137)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.checkedCompile(CompileServiceImpl.kt:777)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.access$checkedCompile(CompileServiceImpl.kt:95)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$2.invoke(CompileServiceImpl.kt:749)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$doCompile$2.invoke(CompileServiceImpl.kt:95)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.ifAlive(CompileServiceImpl.kt:930)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.ifAlive$default(CompileServiceImpl.kt:817)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.doCompile(CompileServiceImpl.kt:743)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.access$doCompile(CompileServiceImpl.kt:95)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$compile$1.invoke(CompileServiceImpl.kt:380)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl$compile$1.invoke(CompileServiceImpl.kt:95)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.ifAlive(CompileServiceImpl.kt:930)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.ifAlive$default(CompileServiceImpl.kt:817)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:339)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:359)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:562)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:796)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:677)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:676)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make field private static final jdk.internal.misc.Unsafe jdk.internal.misc.Unsafe.theUnsafe accessible: module java.base does not "opens jdk.internal.misc" to unnamed module @38900184
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:340)
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:280)
	at java.base/java.lang.reflect.Field.checkCanSetAccessible(Field.java:176)
	at java.base/java.lang.reflect.Field.setAccessible(Field.java:170)
	at org.jetbrains.kotlin.com.intellij.util.DebugReflectionUtil.getAllFields(DebugReflectionUtil.java:52)
	at org.jetbrains.kotlin.com.intellij.util.DebugReflectionUtil.processStronglyReferencedValues(DebugReflectionUtil.java:90)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.findReferencedPsi(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.access$000(CachedValueChecker.java:40)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:81)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.DebugReflectionUtil.processStronglyReferencedValues(DebugReflectionUtil.java:104)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.findReferencedPsi(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.access$000(CachedValueChecker.java:40)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:81)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.DebugReflectionUtil.processStronglyReferencedValues(DebugReflectionUtil.java:104)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.findReferencedPsi(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.access$000(CachedValueChecker.java:40)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:81)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.DebugReflectionUtil.processStronglyReferencedValues(DebugReflectionUtil.java:104)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.findReferencedPsi(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.access$000(CachedValueChecker.java:40)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:81)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.DebugReflectionUtil.processStronglyReferencedValues(DebugReflectionUtil.java:104)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.findReferencedPsi(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.access$000(CachedValueChecker.java:40)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:81)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker$1.process(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.DebugReflectionUtil.processStronglyReferencedValues(DebugReflectionUtil.java:104)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.findReferencedPsi(CachedValueChecker.java:78)
	at org.jetbrains.kotlin.com.intellij.util.CachedValueChecker.checkProvider(CachedValueChecker.java:52)
	at org.jetbrains.kotlin.com.intellij.util.CachedValuesManagerImpl.getCachedValue(CachedValuesManagerImpl.java:57)
	at org.jetbrains.kotlin.com.intellij.psi.util.CachedValuesManager.getCachedValue(CachedValuesManager.java:133)
	at org.jetbrains.kotlin.com.intellij.psi.impl.source.ClassInnerStuffCache.getInnerClasses(ClassInnerStuffCache.java:82)
	at org.jetbrains.kotlin.com.intellij.psi.impl.compiled.ClsClassImpl.getInnerClasses(ClsClassImpl.java:184)
	at org.jetbrains.kotlin.load.java.structure.impl.JavaClassImpl.getInnerClasses(JavaClassImpl.kt:35)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassMemberScope$nestedClassIndex$1.invoke(LazyJavaClassMemberScope.kt:618)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassMemberScope$nestedClassIndex$1.invoke(LazyJavaClassMemberScope.kt:64)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:323)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:364)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassMemberScope.computeClassNames(LazyJavaClassMemberScope.kt:665)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.computeDescriptors(LazyJavaScope.kt:316)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1.invoke(LazyJavaScope.kt:58)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$allDescriptors$1.invoke(LazyJavaScope.kt:52)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:323)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedNotNullLazyValue.invoke(LockBasedStorageManager.java:364)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedDescriptors(LazyJavaScope.kt:306)
	at org.jetbrains.kotlin.resolve.DescriptorUtils.getAllDescriptors(DescriptorUtils.java:576)
	at org.jetbrains.kotlin.load.java.sam.SingleAbstractMethodUtils.getAbstractMembers(SingleAbstractMethodUtils.java:49)
	at org.jetbrains.kotlin.load.java.sam.SingleAbstractMethodUtils.getSingleAbstractMethodOrNull(SingleAbstractMethodUtils.java:140)
	at org.jetbrains.kotlin.load.java.sam.SamConversionResolverImpl$resolveFunctionTypeIfSamInterface$1.invoke(SamConversionResolverImpl.kt:52)
	at org.jetbrains.kotlin.load.java.sam.SamConversionResolverImpl$resolveFunctionTypeIfSamInterface$1.invoke(SamConversionResolverImpl.kt:31)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction$1.invoke(LockBasedStorageManager.java:520)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction$1.invoke(LockBasedStorageManager.java:517)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:402)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$CacheWithNullableValuesBasedOnMemoizedFunction.computeIfAbsent(LockBasedStorageManager.java:528)
	at org.jetbrains.kotlin.load.java.sam.SamConversionResolverImpl.resolveFunctionTypeIfSamInterface(SamConversionResolverImpl.kt:51)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaClassDescriptor.getFunctionTypeForSamInterface(LazyJavaClassDescriptor.kt:136)
	at org.jetbrains.kotlin.load.java.sam.SamConversionResolverImpl.resolveSamConstructor(SamConversionResolverImpl.kt:34)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaPackageScope.computeNonDeclaredFunctions(LazyJavaPackageScope.kt:164)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:90)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope$functions$1.invoke(LazyJavaScope.kt:52)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:402)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:470)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.LazyJavaScope.getContributedFunctions(LazyJavaScope.kt:225)
	at org.jetbrains.kotlin.load.java.lazy.descriptors.JvmPackageScope.getContributedFunctions(JvmPackageScope.kt:65)
	at org.jetbrains.kotlin.resolve.scopes.ChainedMemberScope.getContributedFunctions(ChainedMemberScope.kt:39)
	at org.jetbrains.kotlin.resolve.scopes.AbstractScopeAdapter.getContributedFunctions(AbstractScopeAdapter.kt:40)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.collectCandidateDescriptors(QualifiedExpressionResolver.kt:248)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.processSingleImport(QualifiedExpressionResolver.kt:223)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.processImportReference(QualifiedExpressionResolver.kt:199)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$importedScopesProvider$1.invoke(LazyImportScope.kt:89)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$importedScopesProvider$1.invoke(LazyImportScope.kt:75)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:402)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.getImportScope(LazyImportScope.kt:180)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$1.invoke(LazyImportScope.kt:155)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:161)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver$selectSingleFromImports$2.invoke(LazyImportScope.kt:75)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager.compute(LockBasedStorageManager.java:211)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportResolver.selectSingleFromImports(LazyImportScope.kt:161)
	at org.jetbrains.kotlin.resolve.lazy.LazyImportScope.getContributedClassifier(LazyImportScope.kt:209)
	at org.jetbrains.kotlin.resolve.scopes.utils.ScopeUtilsKt.findClassifier(ScopeUtils.kt:74)
	at org.jetbrains.kotlin.resolve.QualifiedExpressionResolver.resolveDescriptorForType(QualifiedExpressionResolver.kt:72)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveDescriptorForType(TypeResolver.kt:870)
	at org.jetbrains.kotlin.resolve.TypeResolver$resolveTypeElement$1.visitUserType(TypeResolver.kt:219)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:915)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitUserType(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtUserType.accept(KtUserType.java:42)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveTypeElement(TypeResolver.kt:217)
	at org.jetbrains.kotlin.resolve.TypeResolver.doResolvePossiblyBareType(TypeResolver.kt:141)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolvePossiblyBareType(TypeResolver.kt:129)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveType(TypeResolver.kt:104)
	at org.jetbrains.kotlin.resolve.TypeResolver.resolveType(TypeResolver.kt:80)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.resolveValueParameters(FunctionDescriptorResolver.kt:342)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.createConstructorDescriptor(FunctionDescriptorResolver.kt:313)
	at org.jetbrains.kotlin.resolve.FunctionDescriptorResolver.resolvePrimaryConstructorDescriptor(FunctionDescriptorResolver.kt:255)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.resolvePrimaryConstructor(LazyClassMemberScope.kt:346)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope$primaryConstructor$1.invoke(LazyClassMemberScope.kt:96)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope$primaryConstructor$1.invoke(LazyClassMemberScope.kt:49)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$LockBasedLazyValue.invoke(LockBasedStorageManager.java:323)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.getPrimaryConstructor(LazyClassMemberScope.kt:331)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.createPropertiesFromPrimaryConstructorParameters(LazyClassMemberScope.kt:265)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.getNonDeclaredProperties(LazyClassMemberScope.kt:250)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.doGetProperties(AbstractLazyMemberScope.kt:126)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$propertyDescriptors$1.invoke(AbstractLazyMemberScope.kt:50)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope$propertyDescriptors$1.invoke(AbstractLazyMemberScope.kt:39)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunction.invoke(LockBasedStorageManager.java:402)
	at org.jetbrains.kotlin.storage.LockBasedStorageManager$MapBasedMemoizedFunctionToNotNull.invoke(LockBasedStorageManager.java:470)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.AbstractLazyMemberScope.getContributedVariables(AbstractLazyMemberScope.kt:108)
	at org.jetbrains.kotlin.resolve.lazy.descriptors.LazyClassMemberScope.getContributedVariables(LazyClassMemberScope.kt:235)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver$1.visitParameter(LazyDeclarationResolver.java:179)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver$1.visitParameter(LazyDeclarationResolver.java:118)
	at org.jetbrains.kotlin.psi.KtParameter.accept(KtParameter.java:50)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver.resolveToDescriptor(LazyDeclarationResolver.java:118)
	at org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver.resolveToDescriptor(LazyDeclarationResolver.java:113)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer$analyzeDeclarations$1.registerPrimaryConstructorParameters(LazyTopDownAnalyzer.kt:148)
	at org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer$analyzeDeclarations$1.visitClass(LazyTopDownAnalyzer.kt:142)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitClass(KtVisitorVoid.java:451)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitClass(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtClass.accept(KtClass.kt:34)
	at org.jetbrains.kotlin.psi.KtElementImplStub.accept(KtElementImplStub.java:58)
	at org.jetbrains.kotlin.resolve.ExceptionWrappingKtVisitorVoid.visitDeclaration(ExceptionWrappingKtVisitorVoid.kt:32)
	... 81 more


FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':compileKotlin'.
> Internal compiler error. See log for more details

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 13s
